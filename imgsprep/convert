#!/usr/bin/env bash
set -e

truncate -s 0 ocr.txt

function ocr {
  name=$(tesseract --oem 0 -l eng "$1" stdout 2>/dev/null)
  name=$(tr '\n' ' ' <<< "$name")
  name=$(tr '[:upper:]' '[:lower:]' <<< "$name")
  name=$(sed s/0/o/g <<< "$name")
  name=$(sed 's/[^a-z]/ /g' <<< "$name")
  name=$(sed 's/\s\+/_/g' <<< "$name")
  echo "$name"
}

# 1st arg: image to reencode
# 2nd arg: file basename without ending of output webp and jpg file
function reencode {
  # transparent corners
  convert "$1" -virtual-pixel transparent -channel A -blur 0x20 "$2.gif"
  # webp
  ffmpeg -y -i "$2.gif" -vf scale=600:-1 -preset drawing -compression_level 6 -qscale 50 "$2.webp"
  # jpg
  convert -background white -alpha remove -strip -interlace Plane -quality 80 -resize 300 "$2.gif" "$2.jpg"
}

# 1st arg: image to handle
# 2nd arg: crop-parameter of the title of the card in the image
function handle_image {
  image="$1"
  crop="$2"

  if [ ! -f "$image" ]; then
    return
  fi
  base="$(dirname "$image")/$(basename "$image" .ppm)"

  # ocr name
  convert -crop "$crop" -level 65%,75% "$image" "$base.pbm"
  name=$(ocr "$base.pbm")
  echo $name
  echo $base $name >> ocr.txt

  reencode "$image" "$base"
}

# power cards
for f in {base,branchclaw,jagged-earth,promo,promo2}/{major,minor,spirit}-*.ppm; do
  handle_image "$f" "500x100+200+40"
done

# fear cards
for f in {base,branchclaw,jagged-earth,promo,promo2}/fear-*.ppm; do
  handle_image "$f" "650x82+45+40"
done

# event cards
for f in {base,branchclaw,jagged-earth,promo,promo2}/event-*.ppm; do
  handle_image "$f" "530x75+130+40"
done
